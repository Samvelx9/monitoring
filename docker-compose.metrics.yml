version: '2.1'
volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    build:
      context: ./prometheus
    image: registry.synisys.com/infrastructure/prometheus:v2.31.1
    mem_limit: 3gb
    mem_reservation: 3gb
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - /data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    ports:
      - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"

  elasticsearch_exporter:
    image: registry.synisys.com/infrastructure/elasticsearch-exporter:v1
    container_name: elasticsearch_exporter
    command:
     - '--es.uri=http://elasticsearch:9200'
    restart: unless-stopped
    ports:
    - "9114:9114"
    labels:
      org.label-schema.group: "monitoring"

  consul-exporter:
    image: registry.synisys.com/infrastructure/consul-exporter:v1
    container_name: consul-exporter
    command:
     - '--consul.server={consulserverIP}:8500'
    restart: unless-stopped
    ports:
    - "9107:9107"
    labels:
      org.label-schema.group: "monitoring"

  nginx-promexporter:
    build:
      context: ./nginx_promexporter
    image: registry.synisys.com/infrastructure/nginx-prom-exporter:1.0.15
    container_name: nginx-promexporter
    volumes:
      - ./nginx_promexporter:/usr/src/app/external
    restart: unless-stopped
    ports:
      - "84:5000"
    labels:
      org.label-schema.group: "monitoring"     

  node-exporter:
    image: registry.synisys.com/infrastructure/node-exporter:v1.3.1
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "9100:9100"
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: registry.synisys.com/infrastructure/cadvisor:v0.43.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    ports:
      - "8080:8080"
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: registry.synisys.com/infrastructure/grafana:8.3.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    labels:
      org.label-schema.group: "monitoring"
