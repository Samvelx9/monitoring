filter {
  if [type] == "nginx-error" {
    grok {
      patterns_dir => ["/opt/logstash/patterns/nginxlogs/"]
      break_on_match => false
      match => { "message" => "%{NGINXERROR}" }
    }
    mutate {
      convert => { "host" => "string" }
      remove_field => [ "host" ]
    }
    if [nginx.service.name] == "shell" {
        mutate {copy => { "nginx.service.version" => "nginx.app.name"}}
        mutate {replace => {"nginx.service.version" => "-" }}
    }
  }

  else if [type] == "nginx-access" {
    grok {
      patterns_dir => ["/opt/logstash/patterns/nginxlogs/"]
      break_on_match => false
      match => { "message" => "%{NGINXACCESS}" }
      match => { "request_uri" => "%{NGINXURISOURCE}" }
    }
    mutate {
       convert => { "bytes_sent" => "integer" }
       convert => { "body_bytes_sent" => "integer" }
       convert => { "request_time" => "float" }
       convert => { "upstream_response_time" => "float" }
       remove_field => [ "image_id", "image_name", "host", "command", "container_id", "container_name", "tag", "level", "message" ]
       remove_tag => [ "_grokparsefailure_sysloginput" ]
    }
    if [nginx.service.name] == "shell" {
        mutate {copy => { "nginx.service.version" => "nginx.app.name"}}
        mutate {replace => {"nginx.service.version" => "-" }}
    }
  }

  else if [type] == "log" {
    grok {
      patterns_dir => ["/opt/logstash/patterns"]
      break_on_match => false
      match => {"[message]" => "%{APPLOG}"}
      match => {"[log][file][path]" => "%{APPBEATSSOURCE}"}
    }
    date {
        timezone => "Asia/Yerevan"
        match => ["app.logtime", "yyyy-MM-dd HH:mm:ss,SSS"]
        remove_field => ["app.logtime"]
    }
    mutate {
      convert => { "host" => "string" }
      gsub => [
        "app.traceid", "[${]+ctx:X-B3-TraceId.+", "no-trace",
        "app.spanid", "[${]+ctx:X-B3-SpanId.+", "no-span",
        "app.name", "/metrics", "metrics-endpoint",
        "app.name", "[${]+ctx:applicationId.+", "no-application",
        "app.service.name", "-", ""
      ]
      remove_field => [ "[beat][hostname]", "[beat][name]", "host" , "[beat][version]", "[agent][hostname]", "[agent][id]" ,"[agent][type]" , "[agent][name]", "[agent][version]" , "[agent][ephemeral_id]" ,"ignore.newlines" ]
    }
  }
}
